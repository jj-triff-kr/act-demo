# This workflow will install Python dependencies, run tests, lint, build a Docker image, and deploy to GCP Cloud Run
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
    inputs:
      user:
        type: string

permissions:
  contents: read
  id-token: write # This is required for requesting the JWT

env:
  JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}

jobs:
  build-and-deploy:

    runs-on: [self-hosted, aks]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest || true # Make this optional since we don't have tests yet

    - name: Run Python script
      run: |
        python hello.py "GitHub Actions"

    # Setup Google Cloud CLI
    - id: 'auth'
      if: ${{!env.ACT}}
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # Workload Identity Federation provider
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # Service account email

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    # Build and push the Docker image
    - name: Build and Push Container
      if: ${{!env.ACT}}
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }} .
        gcloud auth configure-docker gcr.io -q
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

    # Deploy to Cloud Run
    - name: Deploy to Cloud Run
      if: ${{!env.ACT}}
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

    # Output the deployed URL
    - name: Show Output
      if: ${{!env.ACT}}
      run: echo ${{ steps.deploy.outputs.url }}
